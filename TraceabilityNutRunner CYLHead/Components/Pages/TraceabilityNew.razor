@page "/traceabilityNew"
@using System.Collections.Generic
@using MudBlazor
@using System.Timers
@inherits LayoutComponentBase

<MudGrid>
    <MudItem xs="12">
        <MudPaper Class="d-flex align-items-center justify-content-between p-3">
            <div class="d-flex align-items-center">
                <MudText Class="ml-2" Style="font-weight: bold; font-size: 1.5rem;">PT. HINO MOTOR MANUFACTURING INDONESIA</MudText>
            </div>
            <MudText>@DateTime.Now.ToString("F")</MudText>
        </MudPaper>

        <MudPaper Class="d-flex align-items-center justify-content-between p-3">
            <div class="d-flex align-items-center">
                <MudText Style="color: red;">Traceability Nutrunner Cylinder Head</MudText>
            </div>
            <div>
                <MudText Style="color: green;">
                    FTP Connection:
                    <MudIcon Icon="@indicatorIcon" Color="@indicatorColor" Size="Size.Medium" />
                </MudText>
            </div>
        </MudPaper>
    </MudItem>

    <MudItem xs="12">
        <MudPaper Class="d-flex align-items-center justify-content-between p-3">
            <MudGrid Spacing="10" Justify="Justify.FlexStart">
                <MudItem xs="6">
                    <MudTextField @bind-Value="engineNumber" Label="Engine Number" Variant="Variant.Outlined" />
                </MudItem>
                <MudItem xs="6">
                    <MudTextField @bind-Value="measurementStatus" Label="Measurement Status" Variant="Variant.Outlined" />
                </MudItem>
                <MudItem xs="6">
                    <MudTextField @bind-Value="dateTimeMeasurement" Label="Date Time Measurement" Variant="Variant.Outlined" />
                </MudItem>
            </MudGrid>
        </MudPaper>
    </MudItem>


    <MudItem xs="12">
        <MudGrid>
            @foreach (var spindle in spindles)
            {
                <MudItem xs="6" sm="4" md="3" lg="2">
                    <MudPaper Class="pa-4" Elevation="4">
                        <MudText Typo="Typo.subtitle1">Spindle @spindle.Id</MudText>
                        <MudTextField @bind-Value="spindle.Torque" Label="Torque (Nm)" Variant="Variant.Outlined" />
                        <MudTextField @bind-Value="spindle.Angle" Label="Angle (°)" Variant="Variant.Outlined" />
                    </MudPaper>
                </MudItem>
            }
        </MudGrid>
    </MudItem>
</MudGrid>



@code {
    [CascadingParameter] public bool isConnected { get; set; }
    [CascadingParameter(Name = "dateTimeMeasurement")] public string dateTimeMeasurement { get; set; }
    [CascadingParameter(Name = "engineNumber")] public string engineNumber { get; set; }
    [CascadingParameter(Name = "measurementStatus")] public string measurementStatus { get; set; }
    [CascadingParameter(Name = "spindles")] public List<Spindle> spindles { get; set; }

    //private string engineNumber = string.Empty;
    // private string dateTimeMeasurement = DateTime.Now.ToString("F");
    private string indicatorIcon => isConnected ? Icons.Material.Filled.CheckCircle : Icons.Material.Filled.Error;
    private Color indicatorColor => isConnected ? Color.Success : Color.Error;
}
